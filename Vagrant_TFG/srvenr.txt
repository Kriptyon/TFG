#!/bin/bash

# Main script

# Hostnme deseado
DESIRED_HOSTNAME="SRV-ENR"

# Función para checkear si una contraseña pasa los requerimientos
check_password() {
    password=$1

    # Comprueba si la contraseña tiene la cantidad de caracteres necesarios
    if [ ${#password} -lt 8 ]; then
        echo "CONTRASEÑA MALA: La contraseña contiene menos de 8 caracteres"
        return 1
    fi

    # Comprueba si contiene al menos 1 mayúscula
    if ! [[ $password =~ [[:upper:]] ]]; then
        echo "MALA CONTRASEÑA: Contiene menos de 1 letra mayúscula"
        return 1
    fi

    # Comprueba si la contraseña se encuentra en el diccionario
    if grep -q "^$password$" /usr/share/dict/words; then
        echo "DEBUG: Contraseña encontrada en el diccionario: $password"
        echo "MALA CONTRASEÑA: La contraseña es muy fácil o fácilmente adivinable"
        return 1
    else
        echo "DEBUG: Contraseña no encontrada en el diccionario: $password"
    fi

    # Si todas las comprobaciones pasan, retorna éxito
    return 0
}

echo "@@@@@@ $DESIRED_HOSTNAME @@@@@@"
apt update

# Prevents the popup of udisks2.service and automates the restart of it
sudo NEEDRESTART_MODE=a apt-get dist-upgrade --yes


# Configure the hostname of the instance
if [ -n "$DESIRED_HOSTNAME" ]; then
    echo "$DESIRED_HOSTNAME" > /etc/hostname
    hostnamectl set-hostname "$DESIRED_HOSTNAME"
    sed -i "s/127.0.0.1 localhost/127.0.0.1 localhost $DESIRED_HOSTNAME/g" /etc/hosts
fi

# Netplan
nuevo_netplan=$(cat <<EOL
network:
  version: 2
  renderer: networkd
  ethernets:
    eth0: # Interfaz pública
      dhcp4: true
    eth1: # Interfaz privada 1
      dhcp4: false
      addresses: [192.168.2.1/24]
    eth2: # Interfaz privada 2
      dhcp4: false
      addresses: [192.168.100.1/24]
EOL
)
echo "$nuevo_netplan" | sudo tee /etc/netplan/00-network-manager-all.yaml > /dev/null
sudo netplan apply


# DHCP

sudo apt install -y isc-dhcp-server

nuevo_dhcp=$(cat <<EOL
subnet 192.168.2.0 netmask 255.255.255.0 {
  range 192.168.2.50 192.168.2.100;
  option routers 192.168.2.1;
  option domain-name-servers 8.8.8.8, 8.8.4.4;
}

subnet 192.168.100.0 netmask 255.255.255.252 {
  range 192.168.100.2 192.168.100.2;
  option routers 192.168.100.1;
  option domain-name-servers 8.8.8.8, 8.8.4.4;
}
EOL
)

# Sobrescribir el archivo de configuración de DHCP con el nuevo contenido
echo "$nuevo_dhcp" | sudo tee /etc/dhcp/dhcpd.conf > /dev/null

# Configura las interfaces para DHCP
sudo tee /etc/default/isc-dhcp-server > /dev/null <<EOL
INTERFACESv4="eth1 eth2"
EOL

# Reinicia el servicio DHCP
sudo service isc-dhcp-server restart


# DNS
sudo apt install -y bind9

nuevo_named=$(cat <<EOL
// Contenido de named.conf
options {
    directory "/var/cache/bind";

    // Si tienes alguna IP de red específica a la cual BIND9 debería escuchar, puedes especificarla aquí
    // listen-on port 53 { 192.168.2.1; };

    // Permite consultas de cualquier dirección IP
    allow-query { any; };
};

EOL
)
echo "$nuevo_named" | sudo tee /etc/bind/named.conf > /dev/null

nuevo_namedloc=$(cat <<EOL
// Definición de las zonas locales
zone "healthcert.com" {
    type master;
    file "/etc/bind/zones/db.healthcert.com";
};

// Zona inversa para la subred 192.168.2.0/24
zone "1.168.192.in-addr.arpa" {
    type master;
    file "/etc/bind/zones/db.192";
};

// Zona inversa para la subred 192.168.100.0/24
zone "100.168.192.in-addr.arpa" {
    type master;
    file "/etc/bind/zones/db.100";
};
EOL
)
echo "$nuevo_namedloc" | sudo tee /etc/bind/named.conf.local > /dev/null

# Reinicia BIND9
sudo systemctl restart bind9


#PAM
# Password Complexity (Using PAM modules)
# Install necessary packages
apt install libpam-pwquality -y

# Configure PAM
sed -i '/pam_pwquality.so/d' /etc/pam.d/common-password
echo "password requisite pam_pwquality.so retry=3 minlen=8 maxrepeat=3 ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1 difok=3 gecoscheck=1 reject_username enforce_for_root" >> /etc/pam.d/common-password




# Telegram

# Token y chat_id de Telegram
TELEGRAM_BOT_TOKEN="6835637516:AAFCs4xax9K37Xq3p2Sgkqt_8gVjAhYhB7A"
TELEGRAM_CHAT_ID="5089735569"

# Mensaje a enviar
MESSAGE="El script de configuración ha sido ejecutado con éxito en el servidor $DESIRED_HOSTNAME."

# Envía el mensaje utilizando la API de Telegram
curl -s -X POST https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage -d chat_id=$TELEGRAM_CHAT_ID -d text="$MESSAGE"

# Actualización de PAM
sudo pam-auth-update --force --package pwquality

echo "Script executed successfully."
